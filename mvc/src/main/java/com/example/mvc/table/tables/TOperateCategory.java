/*
 * This file is generated by jOOQ.
*/
package com.example.mvc.table.tables;


import com.example.mvc.table.Kelu;
import com.example.mvc.table.Keys;
import com.example.mvc.table.tables.records.TOperateCategoryRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TOperateCategory extends TableImpl<TOperateCategoryRecord> {

    private static final long serialVersionUID = -598469253;

    /**
     * The reference instance of <code>kelu.t_operate_category</code>
     */
    public static final TOperateCategory t_operate_category = new TOperateCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TOperateCategoryRecord> getRecordType() {
        return TOperateCategoryRecord.class;
    }

    /**
     * The column <code>kelu.t_operate_category.id</code>.
     */
    public final TableField<TOperateCategoryRecord, Integer> id = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>kelu.t_operate_category.category_name</code>.
     */
    public final TableField<TOperateCategoryRecord, String> category_name = createField("category_name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>kelu.t_operate_category</code> table reference
     */
    public TOperateCategory() {
        this(DSL.name("t_operate_category"), null);
    }

    /**
     * Create an aliased <code>kelu.t_operate_category</code> table reference
     */
    public TOperateCategory(String alias) {
        this(DSL.name(alias), t_operate_category);
    }

    /**
     * Create an aliased <code>kelu.t_operate_category</code> table reference
     */
    public TOperateCategory(Name alias) {
        this(alias, t_operate_category);
    }

    private TOperateCategory(Name alias, Table<TOperateCategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private TOperateCategory(Name alias, Table<TOperateCategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Kelu.kelu;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TOperateCategoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_t_operate_category;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TOperateCategoryRecord> getPrimaryKey() {
        return Keys.KEY_t_operate_category_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TOperateCategoryRecord>> getKeys() {
        return Arrays.<UniqueKey<TOperateCategoryRecord>>asList(Keys.KEY_t_operate_category_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOperateCategory as(String alias) {
        return new TOperateCategory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOperateCategory as(Name alias) {
        return new TOperateCategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TOperateCategory rename(String name) {
        return new TOperateCategory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TOperateCategory rename(Name name) {
        return new TOperateCategory(name, null);
    }
}
