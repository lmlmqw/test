/*
 * This file is generated by jOOQ.
*/
package com.example.mvc.table.tables;


import com.example.mvc.table.Kelu;
import com.example.mvc.table.Keys;
import com.example.mvc.table.tables.records.TRecommendTopicRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TRecommendTopic extends TableImpl<TRecommendTopicRecord> {

    private static final long serialVersionUID = 78458725;

    /**
     * The reference instance of <code>kelu.t_recommend_topic</code>
     */
    public static final TRecommendTopic t_recommend_topic = new TRecommendTopic();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TRecommendTopicRecord> getRecordType() {
        return TRecommendTopicRecord.class;
    }

    /**
     * The column <code>kelu.t_recommend_topic.id</code>.
     */
    public final TableField<TRecommendTopicRecord, Integer> id = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>kelu.t_recommend_topic.topic_id</code>.
     */
    public final TableField<TRecommendTopicRecord, Integer> topic_id = createField("topic_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>kelu.t_recommend_topic.post_time</code>.
     */
    public final TableField<TRecommendTopicRecord, LocalDateTime> post_time = createField("post_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>kelu.t_recommend_topic.is_delete</code>. 是否被删除推荐
     */
    public final TableField<TRecommendTopicRecord, Byte> is_delete = createField("is_delete", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "是否被删除推荐");

    /**
     * Create a <code>kelu.t_recommend_topic</code> table reference
     */
    public TRecommendTopic() {
        this(DSL.name("t_recommend_topic"), null);
    }

    /**
     * Create an aliased <code>kelu.t_recommend_topic</code> table reference
     */
    public TRecommendTopic(String alias) {
        this(DSL.name(alias), t_recommend_topic);
    }

    /**
     * Create an aliased <code>kelu.t_recommend_topic</code> table reference
     */
    public TRecommendTopic(Name alias) {
        this(alias, t_recommend_topic);
    }

    private TRecommendTopic(Name alias, Table<TRecommendTopicRecord> aliased) {
        this(alias, aliased, null);
    }

    private TRecommendTopic(Name alias, Table<TRecommendTopicRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Kelu.kelu;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TRecommendTopicRecord, Integer> getIdentity() {
        return Keys.IDENTITY_t_recommend_topic;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TRecommendTopicRecord> getPrimaryKey() {
        return Keys.KEY_t_recommend_topic_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TRecommendTopicRecord>> getKeys() {
        return Arrays.<UniqueKey<TRecommendTopicRecord>>asList(Keys.KEY_t_recommend_topic_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRecommendTopic as(String alias) {
        return new TRecommendTopic(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRecommendTopic as(Name alias) {
        return new TRecommendTopic(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TRecommendTopic rename(String name) {
        return new TRecommendTopic(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TRecommendTopic rename(Name name) {
        return new TRecommendTopic(name, null);
    }
}
