/*
 * This file is generated by jOOQ.
*/
package com.example.mvc.table.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TTopicAttribute implements Serializable {

    private static final long serialVersionUID = -1590539399;

    private Integer id;
    private Integer topicId;
    private Byte    gender;
    private Byte    age;
    private String  categoryIDs;
    private Byte    isHot;
    private Byte    isOld;

    public TTopicAttribute() {}

    public TTopicAttribute(TTopicAttribute value) {
        this.id = value.id;
        this.topicId = value.topicId;
        this.gender = value.gender;
        this.age = value.age;
        this.categoryIDs = value.categoryIDs;
        this.isHot = value.isHot;
        this.isOld = value.isOld;
    }

    public TTopicAttribute(
        Integer id,
        Integer topicId,
        Byte    gender,
        Byte    age,
        String  categoryIDs,
        Byte    isHot,
        Byte    isOld
    ) {
        this.id = id;
        this.topicId = topicId;
        this.gender = gender;
        this.age = age;
        this.categoryIDs = categoryIDs;
        this.isHot = isHot;
        this.isOld = isOld;
    }

    public Integer getId() {
        return this.id;
    }

    public TTopicAttribute setId(Integer id) {
        this.id = id;
        return this;
    }

    @NotNull
    public Integer getTopicId() {
        return this.topicId;
    }

    public TTopicAttribute setTopicId(Integer topicId) {
        this.topicId = topicId;
        return this;
    }

    @NotNull
    public Byte getGender() {
        return this.gender;
    }

    public TTopicAttribute setGender(Byte gender) {
        this.gender = gender;
        return this;
    }

    @NotNull
    public Byte getAge() {
        return this.age;
    }

    public TTopicAttribute setAge(Byte age) {
        this.age = age;
        return this;
    }

    @NotNull
    @Size(max = 255)
    public String getCategoryIDs() {
        return this.categoryIDs;
    }

    public TTopicAttribute setCategoryIDs(String categoryIDs) {
        this.categoryIDs = categoryIDs;
        return this;
    }

    @NotNull
    public Byte getIsHot() {
        return this.isHot;
    }

    public TTopicAttribute setIsHot(Byte isHot) {
        this.isHot = isHot;
        return this;
    }

    @NotNull
    public Byte getIsOld() {
        return this.isOld;
    }

    public TTopicAttribute setIsOld(Byte isOld) {
        this.isOld = isOld;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TTopicAttribute other = (TTopicAttribute) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (topicId == null) {
            if (other.topicId != null)
                return false;
        }
        else if (!topicId.equals(other.topicId))
            return false;
        if (gender == null) {
            if (other.gender != null)
                return false;
        }
        else if (!gender.equals(other.gender))
            return false;
        if (age == null) {
            if (other.age != null)
                return false;
        }
        else if (!age.equals(other.age))
            return false;
        if (categoryIDs == null) {
            if (other.categoryIDs != null)
                return false;
        }
        else if (!categoryIDs.equals(other.categoryIDs))
            return false;
        if (isHot == null) {
            if (other.isHot != null)
                return false;
        }
        else if (!isHot.equals(other.isHot))
            return false;
        if (isOld == null) {
            if (other.isOld != null)
                return false;
        }
        else if (!isOld.equals(other.isOld))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.topicId == null) ? 0 : this.topicId.hashCode());
        result = prime * result + ((this.gender == null) ? 0 : this.gender.hashCode());
        result = prime * result + ((this.age == null) ? 0 : this.age.hashCode());
        result = prime * result + ((this.categoryIDs == null) ? 0 : this.categoryIDs.hashCode());
        result = prime * result + ((this.isHot == null) ? 0 : this.isHot.hashCode());
        result = prime * result + ((this.isOld == null) ? 0 : this.isOld.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TTopicAttribute (");

        sb.append(id);
        sb.append(", ").append(topicId);
        sb.append(", ").append(gender);
        sb.append(", ").append(age);
        sb.append(", ").append(categoryIDs);
        sb.append(", ").append(isHot);
        sb.append(", ").append(isOld);

        sb.append(")");
        return sb.toString();
    }
}
