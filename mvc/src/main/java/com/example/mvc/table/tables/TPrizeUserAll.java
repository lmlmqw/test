/*
 * This file is generated by jOOQ.
*/
package com.example.mvc.table.tables;


import com.example.mvc.table.Kelu;
import com.example.mvc.table.Keys;
import com.example.mvc.table.tables.records.TPrizeUserAllRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 所有中奖用户名单
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPrizeUserAll extends TableImpl<TPrizeUserAllRecord> {

    private static final long serialVersionUID = 1478773380;

    /**
     * The reference instance of <code>kelu.t_prize_user_all</code>
     */
    public static final TPrizeUserAll t_prize_user_all = new TPrizeUserAll();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPrizeUserAllRecord> getRecordType() {
        return TPrizeUserAllRecord.class;
    }

    /**
     * The column <code>kelu.t_prize_user_all.id</code>.
     */
    public final TableField<TPrizeUserAllRecord, Integer> id = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>kelu.t_prize_user_all.userId</code>. 用户Id
     */
    public final TableField<TPrizeUserAllRecord, Integer> userId = createField("userId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "用户Id");

    /**
     * The column <code>kelu.t_prize_user_all.nikename</code>. 用户昵称
     */
    public final TableField<TPrizeUserAllRecord, String> nikename = createField("nikename", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "用户昵称");

    /**
     * The column <code>kelu.t_prize_user_all.avatar_file</code>. 用户头像
     */
    public final TableField<TPrizeUserAllRecord, String> avatar_file = createField("avatar_file", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "用户头像");

    /**
     * The column <code>kelu.t_prize_user_all.type</code>. 1.每天中奖 2.5天中奖
     */
    public final TableField<TPrizeUserAllRecord, Byte> type = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "1.每天中奖 2.5天中奖");

    /**
     * The column <code>kelu.t_prize_user_all.share_times</code>. 分享次数
     */
    public final TableField<TPrizeUserAllRecord, Integer> share_times = createField("share_times", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "分享次数");

    /**
     * The column <code>kelu.t_prize_user_all.prize_date</code>. 中奖日期
     */
    public final TableField<TPrizeUserAllRecord, LocalDate> prize_date = createField("prize_date", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "中奖日期");

    /**
     * The column <code>kelu.t_prize_user_all.post_time</code>.
     */
    public final TableField<TPrizeUserAllRecord, LocalDateTime> post_time = createField("post_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>kelu.t_prize_user_all</code> table reference
     */
    public TPrizeUserAll() {
        this(DSL.name("t_prize_user_all"), null);
    }

    /**
     * Create an aliased <code>kelu.t_prize_user_all</code> table reference
     */
    public TPrizeUserAll(String alias) {
        this(DSL.name(alias), t_prize_user_all);
    }

    /**
     * Create an aliased <code>kelu.t_prize_user_all</code> table reference
     */
    public TPrizeUserAll(Name alias) {
        this(alias, t_prize_user_all);
    }

    private TPrizeUserAll(Name alias, Table<TPrizeUserAllRecord> aliased) {
        this(alias, aliased, null);
    }

    private TPrizeUserAll(Name alias, Table<TPrizeUserAllRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "所有中奖用户名单");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Kelu.kelu;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TPrizeUserAllRecord, Integer> getIdentity() {
        return Keys.IDENTITY_t_prize_user_all;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPrizeUserAllRecord> getPrimaryKey() {
        return Keys.KEY_t_prize_user_all_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPrizeUserAllRecord>> getKeys() {
        return Arrays.<UniqueKey<TPrizeUserAllRecord>>asList(Keys.KEY_t_prize_user_all_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPrizeUserAll as(String alias) {
        return new TPrizeUserAll(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPrizeUserAll as(Name alias) {
        return new TPrizeUserAll(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TPrizeUserAll rename(String name) {
        return new TPrizeUserAll(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TPrizeUserAll rename(Name name) {
        return new TPrizeUserAll(name, null);
    }
}
