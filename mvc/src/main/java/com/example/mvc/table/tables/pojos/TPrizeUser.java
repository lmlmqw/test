/*
 * This file is generated by jOOQ.
*/
package com.example.mvc.table.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * 中奖用户
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPrizeUser implements Serializable {

    private static final long serialVersionUID = -2007064107;

    private Integer       id;
    private Integer       userId;
    private String        nickname;
    private String        avatarFile;
    private Byte          type;
    private Integer       shareTimes;
    private LocalDate     prizeDate;
    private LocalDateTime postTime;

    public TPrizeUser() {}

    public TPrizeUser(TPrizeUser value) {
        this.id = value.id;
        this.userId = value.userId;
        this.nickname = value.nickname;
        this.avatarFile = value.avatarFile;
        this.type = value.type;
        this.shareTimes = value.shareTimes;
        this.prizeDate = value.prizeDate;
        this.postTime = value.postTime;
    }

    public TPrizeUser(
        Integer       id,
        Integer       userId,
        String        nickname,
        String        avatarFile,
        Byte          type,
        Integer       shareTimes,
        LocalDate     prizeDate,
        LocalDateTime postTime
    ) {
        this.id = id;
        this.userId = userId;
        this.nickname = nickname;
        this.avatarFile = avatarFile;
        this.type = type;
        this.shareTimes = shareTimes;
        this.prizeDate = prizeDate;
        this.postTime = postTime;
    }

    public Integer getId() {
        return this.id;
    }

    public TPrizeUser setId(Integer id) {
        this.id = id;
        return this;
    }

    @NotNull
    public Integer getUserId() {
        return this.userId;
    }

    public TPrizeUser setUserId(Integer userId) {
        this.userId = userId;
        return this;
    }

    @NotNull
    @Size(max = 32)
    public String getNickname() {
        return this.nickname;
    }

    public TPrizeUser setNickname(String nickname) {
        this.nickname = nickname;
        return this;
    }

    @NotNull
    @Size(max = 300)
    public String getAvatarFile() {
        return this.avatarFile;
    }

    public TPrizeUser setAvatarFile(String avatarFile) {
        this.avatarFile = avatarFile;
        return this;
    }

    @NotNull
    public Byte getType() {
        return this.type;
    }

    public TPrizeUser setType(Byte type) {
        this.type = type;
        return this;
    }

    public Integer getShareTimes() {
        return this.shareTimes;
    }

    public TPrizeUser setShareTimes(Integer shareTimes) {
        this.shareTimes = shareTimes;
        return this;
    }

    @NotNull
    public LocalDate getPrizeDate() {
        return this.prizeDate;
    }

    public TPrizeUser setPrizeDate(LocalDate prizeDate) {
        this.prizeDate = prizeDate;
        return this;
    }

    public LocalDateTime getPostTime() {
        return this.postTime;
    }

    public TPrizeUser setPostTime(LocalDateTime postTime) {
        this.postTime = postTime;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TPrizeUser other = (TPrizeUser) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!userId.equals(other.userId))
            return false;
        if (nickname == null) {
            if (other.nickname != null)
                return false;
        }
        else if (!nickname.equals(other.nickname))
            return false;
        if (avatarFile == null) {
            if (other.avatarFile != null)
                return false;
        }
        else if (!avatarFile.equals(other.avatarFile))
            return false;
        if (type == null) {
            if (other.type != null)
                return false;
        }
        else if (!type.equals(other.type))
            return false;
        if (shareTimes == null) {
            if (other.shareTimes != null)
                return false;
        }
        else if (!shareTimes.equals(other.shareTimes))
            return false;
        if (prizeDate == null) {
            if (other.prizeDate != null)
                return false;
        }
        else if (!prizeDate.equals(other.prizeDate))
            return false;
        if (postTime == null) {
            if (other.postTime != null)
                return false;
        }
        else if (!postTime.equals(other.postTime))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.nickname == null) ? 0 : this.nickname.hashCode());
        result = prime * result + ((this.avatarFile == null) ? 0 : this.avatarFile.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.shareTimes == null) ? 0 : this.shareTimes.hashCode());
        result = prime * result + ((this.prizeDate == null) ? 0 : this.prizeDate.hashCode());
        result = prime * result + ((this.postTime == null) ? 0 : this.postTime.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TPrizeUser (");

        sb.append(id);
        sb.append(", ").append(userId);
        sb.append(", ").append(nickname);
        sb.append(", ").append(avatarFile);
        sb.append(", ").append(type);
        sb.append(", ").append(shareTimes);
        sb.append(", ").append(prizeDate);
        sb.append(", ").append(postTime);

        sb.append(")");
        return sb.toString();
    }
}
